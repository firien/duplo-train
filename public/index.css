:root {
  --background-color: #fff;
  --text-color: #000;
  --header-color: #eef;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background-color: #222;
    --text-color: #fff;
    --header-color: #555;
    }
}

body {
  font-family: -apple-system, 'Helvetica Neue', 'Arial', 'Tahoma';
  margin: 0;
  display: flex;
  background-color: var(--background-color);
}
* {
  box-sizing: border-box;
}
body > .train {
  flex-wrap: wrap;
  width: 100vw;
  transition: filter 1s ease-in-out;
}
body > .train:not(:first-of-type) {
  border-left: thin solid black;
}

@media screen and (min-width:600px) {
  .train:not(:only-of-type) {
    max-width: 50vw;
  }
}

.flex > * {
  flex:  0 0 auto;
}
.train > section:first-child {
  position: sticky;
  position: -webkit-sticky;
  top: 0;
  background-color: white;
  flex: 1 0 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  box-sizing: border-box;
  z-index: 10;
  border-bottom: thin solid #555;
}
@supports (-webkit-backdrop-filter: none) or (backdrop-filter: none) {
  .train > section:first-child {
    -webkit-backdrop-filter: blur(0.8em);
    background-color: rgba(255,255,255,0.6);
  }
}

input[name=name]:invalid {
  background-color: mistyrose;
}
input[name=name] {
  appearance: none;
  -webkit-appearance: none;
  font-size: 1.5rem;
  background-color: transparent;
  border: none;
  max-width: 50vw;
}
.train > section:first-child > * {
  flex: 0 0 auto;
}
.button {
  touch-action: manipulation;
  appearance: none;
  -webkit-appearance: none;
  margin: 0;
  height: 5rem;
  width: 5rem;
  border-radius: 50%;
  border: none;
  display: block;
  cursor: pointer;
  padding: 0;
  box-sizing: border-box;
  transform: scale(0.9);
  transition: transform 0.3s ease-in-out;
  background-position: center;
  background-repeat: no-repeat;
}
.button.repeater {
  background-repeat: repeat-x;  
}
.button:focus {
  outline: none;
}
.button:hover {
  opacity: 1;
  transform: scale(0.95);
}
.button:checked, .button:active {
  opacity: 1;
  transform: scale(1);
}
.button + label {
  touch-action: manipulation;
  display: block;
  text-align: center;
  border-radius: 0.3em;
  margin-top: 1vh;
  color: var(--text-color);
}
.stop {
  background-image: url(stop.svg);
}
.forward {
  background-image: url(forward.svg);
}
.reverse {
  background-image: url(reverse.svg);
}
.sound {
  background-image: url(sound.svg);
  background-color: gold;
}
.refill {
  background-color: darkblue;
}
.green {
  background-color: green;
}
.green:checked + label {
  background-color: green;
  color: var(--text-color);
}
.blue {
  background-color: blue;
}
.blue:checked + label {
  background-color: blue;
  color: var(--text-color);
}
.red, input[name^=direction].stop {
  background-color: red;
/*  border: thin darkred solid;*/
}
.red:checked + label, input[name^=direction].stop:checked + label {
  background-color: red;
  color: var(--text-color);
}
.yellow {
  background-color: yellow;
}
.yellow:checked + label {
  background-color: yellow;
}
.orange {
  background-color: orange;
}
.orange:checked + label {
  background-color: orange;
  color: var(--text-color);
}
.purple {
  background-color: purple;
}
.purple:checked + label {
  background-color: purple;
  color: var(--text-color);
}
.pink {
  background-color: pink;
}
.pink:checked + label {
  background-color: pink;
}

.flex {
  display: flex;
}
section {
  padding: 1rem 0 1rem 1rem;
  padding: 1.5vh;
}

.lights {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}
section > div {
  padding: 0 0.3em;
}
.lights .button {
  background-image: url(light.svg);
}
.motor {
  flex: 1 0;
  flex-wrap: wrap;
}
input[type=range] {
  -webkit-appearance: none;
  background-color: darkgreen;
  border-radius: 1em;
}
input[name^=direction] {
  background-color: grey;
}
input[name^=direction]:checked {
  background-color: darkgreen;
}
input[name^=direction]:checked + label {
  background-color: darkgreen;
  color: var(--text-color);
  text-shadow: var(--background-color) 0 1px;
}
input[name^=color] {
  border: thin solid #aaa;
}
input[name^=color] + label {
  text-transform: capitalize;
}
input[name^=color]:checked + label {
  text-shadow: var(--background-color) 0 1px;
}
input.off + label {
  border-top-right-radius: 0.3em;
  border-bottom-right-radius: 0.3em;
  border-right: thin solid #333;
}

input.off:checked + label {
  background-color: red;
  color: var(--text-color);
}
input.throttle {
  flex: 1 0 100%;
  margin-top: 2em;
  display: block;
  width: 100%;
}

header.flex {
  align-items: center;
  background-color: var(--header-color);
}
header.flex > h3 {
  font-size: 3vh;
  padding: 0.5rem 0 0.5rem 1rem;
  font-weight: 500;
  margin: 0;
  flex: 1 0;
  color: var(--text-color);
}
header input[type=checkbox] {
  display: none;
}
header label {
  padding: 0 0.5em;
  color: var(--text-color);
}
label[for] {
  cursor: pointer;
}
header input:checked + label {
  background-color: yellow;
}
@keyframes moving {
  0% {
    background-position: 50% 50%;
  }
  100% {
    background-position: 450% 50%;
  }
}

input[name^=direction].stop:checked {
  background-color: red;
  animation: none;
}

input[name^=direction]:checked {
  animation: moving 0.65s infinite;
  animation-timing-function: ease-out;
}

input[name^=direction].reverse:checked {
  animation-direction: reverse;
  animation-timing-function: ease-in;
/*  animation-timing-function: linear;*/
}

.freeze {
  filter: grayscale(1);
}

p {
  text-align: center;
  font-size: 1.5rem;
  width: 100vw;
  color: var(--text-color);
}

:root {
  --width: 50px;
  --height: 20px;
/*  --switch-color: rgb(165, 175, 255);*/
  --switch-color: darkblue;
}
/*switch*/
input[type=checkbox].switch {
  max-height: 0;
  max-width: 0;
  opacity: 0;
}
input[type=checkbox].switch + label {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  display: inline-block;
  position: relative;
  box-shadow: inset 0 0 0px 1px #d5d5d5;
  text-indent: calc(var(--width) + 5px);
  white-space: nowrap;
  height: var(--height);
  width: var(--width);
  border-radius: calc(var(--height) / 2);
  padding: 0;
  background-color: white;
}
input[type=checkbox].switch + label::before {
  background: transparent;
  content: '';
  position: absolute;
  display: block;
  height: var(--height);
  width: var(--height);
  top: 0;
  left: 0;
  border-radius: calc(var(--height) / 2);
  transition: .25s ease-in-out;
}
input[type=checkbox].switch + label::after {
  content: '';
  position: absolute;
  display: block;
  height: var(--height);
  width: var(--height);
  top: 0;
  left: 0px;
  border-radius: calc(var(--height) / 2);
  background: white;
  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, .2), 0 2px 4px rgba(0, 0, 0, .2);
  transition: .25s ease-in-out;
}
input[type=checkbox].switch:active + label::after {
  background: #ddd;
}
input[type=checkbox].switch:checked + label::before {
  width: var(--width);
  background: var(--switch-color);
}
input[type=checkbox].switch:checked + label::after {
  left: calc(var(--width) - var(--height));
  box-shadow: inset 0 0 0 1px var(--switch-color), 0 2px 4px rgba(0, 0, 0, .2);
}
